server {
    listen 8080 default_server;
    listen [::]:8080 default_server;

    # We need to set the root for our sevrer,
    # so any static file requests gets loaded from the correct path
    root /var/www/public;

    access_log  /var/log/nginx/access.log  docker;

    index index.php index.html index.htm index.nginx-debian.html;

    # _ makes sure that nginx does not try to map requests to a specific hostname
    # This allows us to specify the urls to our application as infrastructure changes,
    # without needing to change the application
    server_name _;

    # Some static assets are loaded on every page load,
    # and logging these turns into a lot of useless logs.
    # If you would prefer to see these requests for catching 404's etc.
    # Feel free to remove them
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }

    location ~* /api/v\d*/deliveries/cache {
        proxy_pass ${CACHE_ADAPTER_URL};
    }

    location ~* /api/v\d*/deliveries/orders {
        proxy_pass ${ORDER_STATUS_URL};
    }

    location /swagger {
        proxy_pass ${SWAGGER_URL};
    }

    location ~ /\.ht {
        deny all;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    location / {
        # Using try_files here is quite important as a security concideration
        # to prevent injecting PHP code as static assets,
        # and then executing them via a URL.
        # See https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#passing-uncontrolled-requests-to-php
        #try_files /index.php?$query_string $uri $uri/;
        #try_files $uri $uri/;

        proxy_pass ${SERVICE_URL};
    }

}
